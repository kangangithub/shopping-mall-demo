# Server
server:
    port: 1000
    servlet:
      context-path: /

# Spring
spring:
  # 连接池配置, spring boot 2.0默认hikariCP, pom.xml中不需额外添加依赖
  datasource:
    # mariadb驱动
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mysql://xxx.xxx.xxx.xxx:xxx/xxx?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=utf-8
    username: xxx
    password: xxx
#    type: com.alibaba.druid.pool.DruidDataSource
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      minimum-idle: 5
      maximum-pool-size: 15
      auto-commit: true
      idle-timeout: 30000
      pool-name: hikariDataSource
      max-lifetime: 1800000
      connection-timeout: 30000
      connection-test-query: SELECT 1

  # redis配置
  redis:
    database: 0
    host: xxx.xxx.xxx.xxx
    port: xxx
    password:
    timeout: 100
# Lettuce 和 Jedis 的都是连接Redis Server的客户端程序。
# Jedis在实现上是直连redis server，多线程环境下非线程安全，
# 除非使用连接池，为每个Jedis实例增加物理连接。
# Lettuce基于Netty的连接实例（StatefulRedisConnection），可以在多个线程间并发访问，且线程安全，满足多线程环境下的并发访问，
# 同时它是可伸缩的设计，一个连接实例不够的情况也可以按需增加连接实例。
#      # lettuce客户端
#      lettuce:
#        pool:
#          min-idle: 0
#          max-idle: 8
#          max-wait: -1ms
#          max-active: 8
#        shutdown-timeout: 100ms
    # jedis客户端
    jedis:
      pool:
      # 最大连接数（负值表示没有限制）
        max-active: 8
      # 最大阻塞等待时间（负值表示没有限制）
        max-wait: 1
      # 最大空闲链接
        max-idle: 8
      # 最小空闲链接
        min-idle: 0

  # 默认json转换工具:Jackson
  jackson:
    #日期格式化
    date-format: yyyy-MM-dd HH:mm:ss
    serialization:
       #格式化输出
      indent_output: true
      #忽略无法转换的对象
      fail_on_empty_beans: false
    #设置空如何序列化
    defaultPropertyInclusion: NON_EMPTY
    deserialization:
      #允许对象忽略json中不存在的属性
      fail_on_unknown_properties: false
    parser:
      #允许出现特殊字符和转义符
      allow_unquoted_control_chars: true
      #允许出现单引号
      allow_single_quotes: true

# 日志
logging:
  level:
    # 控制日志输出级别
    root: info

# mybatis-plus配置
mybatis-plus:
  # 如果是放在src/main/java目录下 classpath:/com/yourpackage/*/mapper/*Mapper.xml
  # 如果是放在resource目录 classpath:/mapper/*Mapper.xml
  mapper-locations: classpath:mapper/*.xml
  # 实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.example.model
  # 全局配置
  global-config:
    # 主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 0
    # 字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
    # 驼峰下划线转换
    db-column-underline: true
    # mp2.3+ 全局表前缀 mp_
    # table-prefix: mp_
    # 刷新mapper 调试神器
    refresh-mapper: true
    # 数据库大写下划线转换
    # capital-mode: true
    # 逻辑删除配置（下面3个配置）
    logic-delete-value: 1
    logic-not-delete-value: 0
#    sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
  configuration:
    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）
    map-underscore-to-camel-case: true
    cache-enabled: false
    # 配置JdbcTypeForNull, oracle数据库必须配置
    jdbc-type-for-null: 'null'
    # 打印sql语句,调试用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
